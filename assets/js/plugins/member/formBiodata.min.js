/*** module/plugin formBiodata skck */
(function($) {
    // Clear Table pada saat refresh form
    // ini terhubung di fungsi register
    function tableRegisterClear(){
        $("#tb-register").find('tbody tr').removeClass('active').addClass('proses').css({cursor: ""});
        $("#tb-register").find('tbody tr td .label').removeClass('label-danger').addClass('label-warning').html('<i class="icon icon-sli-note"></i> Edit');
        $('#btnKeperluan').removeClass('btn-warning active').find('span').text('Cetak Keperluan');
        $('.simple-pg button').attr('disabled', false).css({cursor: ""});
    }
    function get_modal_excel(id_reg){
        // format id_reg {tahun}-{id_reg}
        $.post('keperluan', {
            exec:'cetak',
            id_reg: id_reg,
            token:$.sessionHandler().get('token')
        }).done(function(resp){
            console.log(resp);
            $.dynamicModal(function(modal) { 
                let __this = this,
                    rumus1 = resp.result.rumus_1?resp.result.rumus_1.split(' '):'',
                    rumus2 = resp.result.rumus_2?resp.result.rumus_2.split(' '):'',
                    content = $(`
                        <div>
                            <div class="table-responsive margin-bottom">
                                <table id="salin" style="max-width:75vw" class="table-format-print">
                                    <tr>
                                        <td>${resp.result.register}</td>
                                        <td>${resp.result.nama}.</td>
                                        <td>${resp.result.tpt_lahir},</td>
                                        <td>'${resp.result.tgl_lahir}.</td>
                                        <td>${resp.result.agama}</td>
                                        <td>${resp.result.negara}</td>
                                        <td>${resp.result.gender}</td>
                                        <td>${resp.result.pekerjaan}.</td>
                                        <td>${resp.result.alamat}.</td>
                                        <td>'${resp.result.nik}.</td>
                                        <td>${resp.result.pass?resp.result.pass:'-'}</td>
                                        <td>${rumus1?rumus1[0]:'-'}</td>
                                        <td>${rumus1?rumus1[1]:''}</td>
                                        <td>${rumus1?rumus1[2]:''}</td>
                                        <td>${rumus1?rumus1[3]:''}</td>
                                        <td>${rumus1?rumus1[4]:''}</td>
                                        <td>${rumus1?rumus1[5]:''}</td>
                                        <td>${rumus2?rumus2[0]:''}</td>
                                        <td>${rumus2?rumus2[1]:''}</td>
                                        <td>${rumus2?rumus2[2]:''}</td>
                                        <td>${rumus2?rumus2[3]:''}</td>
                                        <td>${rumus2?rumus2[4]:''}</td>
                                        <td>${resp.result.catatan}</td>
                                        <td>'${resp.result.tgl_terbit}.</td>
                                        <td>'${resp.result.tgl_expire}.</td>
                                        <td>${resp.result.keperluan}</td>
                                    </tr>
                                </table>
                            </div>
                            <button class="exit-salin btn btn-linear btn-success"><i class="icon icon-sli-chart"></i>Dashboard</button>
                            <button class="btn-copy btn btn-linear btn-warning" onclick="selectElementContents(document.getElementById('salin'))"><i class="icon icon-sli-docs"></i>copy</button>
                            <button class="exit-salin btn btn-linear btn-danger"><i class="icon icon-sli-close"></i>close</button>
                        </div>
                        <script>
                            function selectElementContents(el) {
                                var body = document.body, range, sel;
                                if (document.createRange && window.getSelection) {
                                    range = document.createRange();
                                    sel = window.getSelection();
                                    sel.removeAllRanges();
                                    try {
                                        range.selectNodeContents(el);
                                        sel.addRange(range);
                                    } catch (e) {
                                        range.selectNode(el);
                                        sel.addRange(range);
                                    }
                                } else if (body.createTextRange) {
                                    range = body.createTextRange();
                                    range.moveToElementText(el);
                                    range.select();
                                }
                                document.execCommand("Copy");
                            }
                        </script>
                    `);

                modal.append(content);
                // contoh bind event di sini
                $('.exit-salin').on('click', function() {
                    // ambil modal property backdrop ada dilapisan 3
                    __this.close.call(modal.parents().eq(2));
                    if($(this).find('i').hasClass('icon-sli-chart'))
                        $.formBiodata('close'),$('input.cari-nama').focus()
                });
            });
            $('#terakhir-cetak').initHistory();
        });
    }
    // convert bulan ke romawi
    function bulanKeRomawi(bulan) {
        const romawi = ['', 'I', 'II', 'III', 'IV', 'V', 'VI', 
                        'VII', 'VIII', 'IX', 'X', 'XI', 'XII'];
        return romawi[bulan] || '';
    }
    var forms = {
        input : [
            'nik','nama','tpt_lahir',
            'alamat','rt','rw',
            'hp','passport','sponsor','kriminal'
        ],
        input_tgl : [
            'tgl_lahir'
        ],
        select : [
            'negara',
            'agama',
            'gender',
            'pekerjaan',
            'pendidikan'
        ],
        select_area : ['kabupaten','kecamatan','kelurahan'],
        wajib : ['nik','nama','tpt_lahir','tgl_lahir','agama','gender','alamat']
    };
    var events = {
        open: function() {
            $(this).xbind('click', function() {                
                methods.open()
            })
        },
        close: function() {
            $(this).xbind('click', function() {                
                methods.close()
            })
        }
    };
    var methods = {
        open: function(args,onAjax) {
            // jika ada args maka close semua events
            methods.close(); 
            // selector area custom event chained 
            $('.selector-area').on('chained', function() {
                // fungsi ini ada di plugins/widget.min.js
                $(this).chainSelectorArea();
            });
            // Binding Button Cetak Keperluan baru pemohon
            // disini akan terhubung ke method.register()
            $('#btnKeperluan').on('click', function() {
                let __this = this,
                    id_kep = $('#keperluan').data('id'),
                    id_bio = $('#pribadi').val();
                if(!id_kep){
                    $.simpleAlert({
                        title: 'Ups...',
                        message: 'Keperluan belum dipilih!',
                        type: 'warning',
                        timeOut: 1500
                    });
                    return;
                }
                if(!id_bio){
                    $.simpleAlert({
                        title: 'Peringatan',
                        message: 'Biodata pemohon belum di entri!',
                        type: 'warning',
                        timeOut: 1500
                    });
                    return;
                }
                // jika ada class btn-warning maka masuk mode UBAH/edit Keperluan 
                if($(__this).hasClass('btn-warning')){
                    let id_reg = $("#tb-register").find('tbody tr.active').data('id');
                    $.post('keperluan', { 
                        exec : 'ubah',
                        id_reg : id_reg,
                        id_kep : id_kep,
                        id_bio : id_bio,
                        token : $.sessionHandler().get('token')                        
                    }).done((response)=>{
                        $.simpleAlert({
                            title: response.type === 'success' ? 'Sukses' : 'Peringatan',
                            message: !response.message ? 'Ubah keperluan tidak bisa diproses' : response.message,
                            type: !response.type? 'warning' : response.type,
                            timeOut: 1500,
                            onClose: function() {
                                if(response.type === 'success'){
                                    tableRegisterClear();
                                    $('#tb-register').simplePaginate('updateData', response.result);
                                    $('#keperluan').val('').data('id','').siblings(".clear-icon").hide();
                                }
                            }
                        })
                    }).fail((xhr)=>{
                        console.log(xhr)
                    })
                // jika tidak ada class btn-warning maka masuk mode TAMBAH/buat Keperluan
                }else{
                    $.post('keperluan', { 
                        exec : 'buat',
                        id_bio : id_bio,
                        id_kep : id_kep,
                        token : $.sessionHandler().get('token')                        
                    }).done((response)=>{
                        $.simpleAlert({
                            title: response.type === 'success' ? 'Sukses' : 'Peringatan',
                            message: !response.message ? 'Keperluan tidak bisa diproses' : response.message,
                            type: !response.type? 'warning' : response.type,
                            timeOut: 1500,
                            onClose: function() {
                                if(response.type === 'success'){
                                    let chk_tbkep = $('#tb-keperluan');
                                    if(chk_tbkep.find('tbody tr').length>0){                                        
                                        chk_tbkep.simplePaginate('updateData', response.result);
                                    }else{
                                        methods.register(response.result);
                                        $('#riwayat-register').show();
                                    }
                                    // bersihkan input keperluan
                                    $('#keperluan').val('').data('id','').siblings(".clear-icon").hide();

                                    // langsung buka modal print
                                    let thnReg = new Date().getFullYear();
                                    get_modal_excel(thnReg+'-'+response.result[0]['id'])
                                }
                            }
                        })
                    }).fail((xhr)=>{
                        console.log(xhr)
                    });
                }                
            });
            // tambah atribut data-text di setiap inputan wajib
            forms.wajib.forEach((item)=>{
                let input = $('input[name='+item+'], select[name='+item+'], textarea[name='+item+']'),
                    label = input.siblings('small');
                if(label.attr('data-text')){
                    // normalisasi label wajib
                    label.removeClass('text-danger').text(label.data('text') + '*');                    
                }else{
                    label.attr('data-text',label.text().replace('*',''));
                }
                input.on('blur change',function(){
                    if($(this).val())
                        label.removeClass('text-danger').text(label.data('text') + '*');                   
                })
            });
            // input nik jika entri form baru
            $('input[name=nik]').focus().on('blur',function(){
                // jika form sudah terisi
                if($('#pribadi').val()) return;
                // jika membuka form pemohon baru
                let __this = $(this).val(),
                    label = $(this).siblings('small');                
                if(__this){
                    if(__this.length < 16 || __this.length > 16){
                        label.addClass('text-danger').text('NIK terdapat 16 angka!');
                    }else{
                        label.removeClass('text-danger').text(label.attr('data-text')+'*');
                        $.post('biodata', { id: __this, token: $.sessionHandler().get('token') }).done((response) => {
                            if(response.result.id)
                                $.simpleAlert({
                                    title: 'NIK sudah terdaftar!',
                                    message: 'A.n '+response.result.nama+'<br>TTL : '+response.result.tpt_lahir+', '+response.result.tgl_lahir+'<br>Apakah ingin edit data ini?',
                                    type: 'warning',
                                    showYesNo: true,
                                    btnYes: 'Ya, Edit data',
                                    btnNo: 'Tidak',
                                    onYes: function() {
                                        methods.pull(response.result, response.register);
                                        $('#btnProses .text').text("Update Data");
                                    }
                                });
                                $('.simple-alert-box button.btn-success').focus();
                        })
                    }
                }
            });            
            function openForm(id){
                $('#edit-pemohon').show(),$('#data-pemohon').hide();
                $('#btnProses .text').text(id?"Update Data":"Entri Data");
            }
            if(typeof onAjax !== 'function'){
                openForm(args);
                $('.selector-area').trigger('chained');
            }
            if(!args) return;            
            // ambil data berdasarkan id
            $.post('biodata', { id: args, token: $.sessionHandler().get('token') }).done((response) => {
                openForm(args);
                if(typeof onAjax === 'function')
                    onAjax(response);
                if(response.result)
                    methods.pull(response.result, response.register);
                
            }).fail(function(jqXHR, textStatus, errorThrown) {
                if(typeof onAjax === 'function')
                    onAjax(jqXHR);
            })
        },
        close: function() {
            methods.reset(),
            $('#edit-pemohon').hide(),
            $('#data-pemohon').show(),
            // matikan chained event selector area
            $('.selector-area').off('chained').chainSelectorArea(false),
            $('input[name=nik]').off('blur'),
            $('#riwayat-register').hide();
            // unbind keperluan pemohon
            $('#btnKeperluan').off('click');
            $("#tb-register").simplePaginate('destroy');
            // Clear Table Register pada saat close form
            tableRegisterClear();            
        },
        reset : function() {
           // Mengosongkan form setiap klik table editor atau history perubahan
           // hapus form biodata
           $('#pribadi').val("");
           $('.normal-form').val("");
           $('#keperluan').val("").data('id','');
           // mendisable select kelurahan & kecamatan
           forms.select_area.forEach(fr => {
             if(fr=='kabupaten'){
               $('select[name='+fr+']').val('').simpleSelect('reload'); 
             }else{
               $('select[name='+fr+']').val('').attr('disabled',true).simpleSelect('reload'); 
             }      
           });  
           // mengosongkan normal select
           forms.select.forEach(fr => {
             $('select[name='+fr+']').val("").simpleSelect('reload'); 
           });           
           // default negara, pendidikan dan pekerjaan
           $(`select[name=pendidikan]`).val(5).simpleSelect('reload');
           $(`select[name=negara]`).val(100).simpleSelect('reload');
           $(`select[name=pekerjaan]`).val(1).simpleSelect('reload');
           // disini nanti reset form riwayat & form keluarga
        },
        pull:function(resp,regs){
            if(!resp.id){
                // focus ke input NIK
                $('input[name=nik]').focus();
                return;
            }
            // focus ke input keperluan
            $('#keperluan').focus();
            // ubah nilai panel navigator data #pribadi [id_biodata]
            $('#pribadi').val(resp.id);
            // pull semua data input jika ada
            forms.input.forEach(k=>{
                if(k=='alamat' || k=='kriminal'){
                    $('textarea[name='+k+']').val(resp[k])
                }else{
                    $('input[name='+k+']').val(resp[k]).trigger('input');
                }
            }),
            forms.input_tgl.forEach(k=>{
                // perlakuan flatpicker memang agak beda
                let fp = $('input[name='+k+']').get(0)._flatpickr;
                fp.setDate(resp[k], true); 
            }),
            forms.select.forEach(k=>{
                if(resp[k])
                    $('select[name='+k+']').val(resp[k]).trigger('change');
            });
            if(resp['area']){
                $('select[name=kabupaten]').val(resp['area'].substr(0,5)).simpleSelect('reload');
                // mendapatkan data kecamatan
                $.getJSON('wilayah/kec/'+resp['area'].substr(0,5)).done(function(vars){                            
                    let opt = '<option value="">~Pilih Kecamatan~</option>';
                    vars.result.forEach(kec => {
                        opt += `<option value="${kec.kode}">${kec.nama}</option>`
                    });
                    $('select[name=kecamatan]').attr('disabled',false).html(opt).val(resp['area'].substr(0,8)).simpleSelect('reload')    
                    // mendapatkan data kelurahan               
                    $.getJSON('wilayah/kel/'+resp['area'].substr(0,8)).done(function(vars){
                        let opt = '<option value="">~Pilih Kelurahan~</option>';
                        vars.result.forEach(kec => {
                            opt += `<option value="${kec.kode}">${kec.nama}</option>`
                        });
                        $('select[name=kelurahan]').attr('disabled',false).html(opt).val(resp['area']).simpleSelect('reload');                        
                                   
                    })
                }).always(function(){
                    // trigger event chain selector area
                    $('.selector-area').trigger('chained')
                })
            }else{
                // trigger event chain selector area jika area kosong
                $('.selector-area').trigger('chained')
            }
            if(regs && regs.length > 0){
                methods.register(regs);
                $('#riwayat-register').show();
            }
            // jika ada catatan kriminal
            if(regs['kriminal']){
                $('textarea[name=kriminal]').show();
                $('input[name=chk-kriminal]').prop('checked',true);
            }
        },

        form : function (){
            return forms
        },
        forms : function (...exclude){
            // exclude adalah daftar properti yang tidak diinginkan
            // misal 'alamat','kriminal';
            let merged = [];
            // loop semua properti dengan forEach
            Object.values(forms).forEach(function(arr) {
                merged = merged.concat(arr);
            });
            // hapus duplikat
            let unique=[...new Set(merged)];
            // jika ada nilai exclude
            if(exclude)
                unique = unique.filter(item => !exclude.includes(item));

            return unique;
        },
        // ini untuk check dan tampilkan table register pemohon
        register : function(ndata){
            $("#tb-register").simplePaginate({
                data: ndata,
                rowsPerPage: 5,
                // currentPage: 2,
                // columns: ["no", "nama", "alamat"],
                renderRow: function (row, index) {
                    let date = new Date(row.tanggal),
                        tahun = date.getFullYear(),
                        tanggal = date.getDate(),
                        bulan = date.getMonth(),
                        bulanRomawi = bulanKeRomawi(bulan + 1),
                        namaBulanID = new Intl.DateTimeFormat('id-ID', { month: 'long' }).format(date);
                    return `
                        <tr class="proses" data-id="${tahun+'-'+row.id}">
                            <td class="text-center">${index + 1}</td>
                            <td>
                                <b>${String(row.id).padStart(2,'0')+'/YAN.2.3/'+bulanRomawi+'/'+tahun}</b><br>
                                <i>Tgl. ${tanggal+' '+namaBulanID+' '+tahun}</i>
                            </td>
                            <td>${row.keperluan}</td>
                        </tr>
                    `;
                },
                onSuccess: function() {
                    let $table = $(this),
                        icoEdit = '<i class="icon icon-sli-note"></i> Edit',
                        icoBatal = '<i class="icon icon-cross_mark"></i> Batal',
                        btnEdit = `
                        <td style="width:50px">
                            <span class="label label-warning">${icoEdit}</span>                            
                        </td>`;
                    $table.find('thead th:last-child').attr('colspan',2);
                    $table.find('tbody tr').append(btnEdit); 
                    // Binding event click ke semua <td> dalam tbody yang baru saja di-render
                    $(this).find('tbody td .label').xbind('click', function () {
                        let _this = this, $child  = $(this).parent('td'), $parent = $child.parent('tr');                        
                        function tbEditClear(_this){
                            tableRegisterClear();
                            $parent.removeClass('proses').addClass('active').css({cursor: "progress"});
                            $('#btnKeperluan').addClass('btn-warning active').find('span').text('Edit Keperluan');
                            $(_this).html(icoBatal).removeClass('label-warning').addClass('label-danger');
                            $('.simple-pg button').attr('disabled', true).css({cursor: "not-allowed"});
                        }
                        // Hapus class active dari semua baris jika ada
                        if(!$(_this).hasClass('label-danger')){
                            tbEditClear(_this)
                        }else{  
                            tableRegisterClear()
                        } 
                    });
                    // bind event click table row 'tr' register
                    // untuk cetak detail table excel skck
                    $(this).find('tbody td').filter(function() {
                        const index = $(this).index() + 1; // index mulai dari 0 → +1
                        return index <= 3;
                    }).xbind('click', function () {
                        let id_reg = $(this).parent('tr').data('id');
                        if(!$(this).parent('tr').hasClass('active'))
                            get_modal_excel(id_reg)
                    })
                }
            })
        }
    };


    $.fn.formBiodata = function(option) {
        if (events[option]) {
            return events[option].apply(this, Array.prototype.slice.call(arguments, 1));
        } else {
            $.error('Method ' + option + ' tidak ada dalam formBiodata');
        }
    };
    $.formBiodata = function(option) {
        if (methods[option]) {
            return methods[option].apply(this, Array.prototype.slice.call(arguments, 1));
        } else {
            $.error('Method ' + option + ' tidak ada dalam formBiodata');
        }
    };
})(jQuery);